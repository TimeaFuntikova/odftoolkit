##################################################################
##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##  http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
##################################################################
## Context:
##
## The Velocity context is added up in the SchemaToTemplate.java
## xmlModel - Represents an ODF grammar parsed by MSV with all relevant informations and usabiltiy functions
## xmlModelHistory - sorted list from latest to earliest release to assist in finding new XML node additions (see odf-reference-template.vm)
## But the Velocity context can also be extended by parameters from the calling main-template.
package org.odftoolkit.odfdom.dom;

import org.odftoolkit.odfdom.dom.attribute.text.TextCAttribute;
import org.odftoolkit.odfdom.pkg.AttributeVisitor;
import org.odftoolkit.odfdom.pkg.OdfAttribute;
##
#foreach ($attribute in ${xmlModel.getAttributes().withoutMultiples()})
#if ($attribute != "*")
#set ($NS = ${attribute.getNamespace()})
#set($className = "${xmlModel.camelCase($attribute)}Attribute")
#if ($NS)
import org.odftoolkit.odfdom.dom.attribute.${NS}.${className};
#else
import org.odftoolkit.odfdom.dom.attribute.${className};
#end
#end
#end
##
public abstract class DefaultAttributeVisitor implements AttributeVisitor {

	/* (non-Javadoc)
	 * @see org.odftoolkit.odfdom.pkg.AttributeVisitor\#visit(org.odftoolkit.odfdom.pkg.OdfAttribute)
	 */
	@Override
	abstract public void visit(OdfAttribute attribute);

#foreach ($attribute in ${xmlModel.getAttributes().withoutMultiples()})
#if ($attribute != "*")
#set ($className = "${xmlModel.camelCase($attribute)}Attribute")
	/**
	 * A method to visit "${attribute.getQName()}" attribute
	 * @param attr - an instance of $className
	 */
	public void visit($className attr) {
		visit((OdfAttribute) attr);
	}
#end
#end
}
